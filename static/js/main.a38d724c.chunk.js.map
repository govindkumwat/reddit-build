{"version":3,"sources":["component/api/Reddit.jsx","App.js","index.js"],"names":["Reddit","useState","img","setImg","page","setPage","iddata","slice","useEffect","fetch","length","map","id","data","then","response","json","children","window","onscroll","Math","ceil","innerHeight","scrollY","document","documentElement","scrollHeight","console","log","breakpointCols","default","className","columnClassName","filter","imgdata","url_overridden_by_dest","includes","href","url","src","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"gPAIaA,G,MAAS,WAEpB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAJP,GAIjB,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAASJ,EAAIK,OAAO,GAQ1BC,qBAAW,WACXC,MAAM,iDAAD,OAAmDH,EAAOI,OAAS,EAAIJ,EAAOK,KAAI,SAAAC,GAAE,mBAAUA,EAAGC,KAAKD,OAAO,GAA7G,iBAAwHR,IAC5HU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAD,GAAI,OAAIV,EAAO,GAAD,mBAAKD,GAAL,YAAaW,EAAKA,KAAKI,iBAO1C,CAACb,IA6BF,OApBFc,OAAOC,SAAW,WAEAC,KAAKC,KAAKH,OAAOI,YAAcJ,OAAOK,SAAYC,SAASC,gBAAgBC,aAGxFN,KAAKC,KAAKH,OAAOI,YAAcJ,OAAOK,UAAYC,SAASC,gBAAgBC,cAT9ErB,EAAQD,EAAO,IAgBjBuB,QAAQC,IAAI1B,GASR,mCAGJ,cAAC,IAAD,CAEE2B,eApD6B,CAC3BC,QAAS,EACT,KAAM,EACN,IAAK,EACL,IAAK,GAiDPC,UAAU,kBACVC,gBAAgB,yBAJlB,SAQK9B,EAAIQ,OAAS,GACTR,EAAI+B,QAAO,SAACC,GAAD,OAAaA,EAAQrB,KAAKsB,uBAAuBC,SAAS,WAASzB,KAAI,SAACuB,GAAD,OAGnF,qCAEA,mBAAGG,KAAMH,EAAQrB,KAAKyB,MACtB,qBAAKC,IAAKL,EAAQrB,KAAKsB,uBAAwBE,KAAMH,EAAQrB,KAAKyB,kBC5D3DE,MAVf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAd,8BAEA,cAAC,EAAD,QCHNU,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFnB,SAASoB,eAAe,W","file":"static/js/main.a38d724c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './reddit.css'\r\nimport Masonry from 'react-masonry-css'\r\nconst PAGE_NUMBER =1;\r\nexport const Reddit = () => {\r\n\r\n  const [img, setImg] = useState('')\r\n  const [page, setPage] = useState(PAGE_NUMBER)\r\n\r\n  const iddata = img.slice(-1)\r\n  const breakpointColumnsObj = {\r\n    default: 3,\r\n    1100: 2,\r\n    700: 2,\r\n    500: 2\r\n  };\r\n\r\n  useEffect( () => {\r\n  fetch(`https://www.reddit.com/r/wallpaper.json?after=${ iddata.length > 0 ? iddata.map(id => `t3_${id.data.id}`): ''}&page=${page}`)\r\n  .then(response => response.json())\r\n  .then(data => setImg([...img, ...data.data.children],\r\n    \r\n    )\r\n\r\n\r\n  )\r\n\r\n}, [page])\r\n\r\n//console.log(img)\r\n\r\nconst scrollToEnd = () => {\r\n  setPage(page + 1)\r\n \r\n}\r\n\r\nwindow.onscroll = function () {\r\n\r\n  const bottom =  Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n  \r\n  if (bottom,\r\n     Math.ceil(window.innerHeight + window.scrollY) >= document.documentElement.scrollHeight\r\n    ) {\r\n      scrollToEnd()\r\n     \r\n    \r\n  }\r\n}\r\nconsole.log(img);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n\r\n<Masonry\r\n \r\n  breakpointCols={breakpointColumnsObj}\r\n  className=\"my-masonry-grid\"\r\n  columnClassName=\"my-masonry-grid_column\">\r\n\r\n    \r\n  \r\n    {img.length > 5 &&\r\n         img.filter((imgdata) => imgdata.data.url_overridden_by_dest.includes('.jpg')).map((imgdata) => (\r\n\r\n          \r\n        <>\r\n      \r\n        <a href={imgdata.data.url}></a>\r\n        <img src={imgdata.data.url_overridden_by_dest} href={imgdata.data.url} />\r\n      </>\r\n      ))\r\n    }    \r\n </Masonry>\r\n\r\n   \r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","\nimport './App.css';\nimport { Fetching } from './component/api/Fetching';\nimport {Reddit} from './component/api/Reddit';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className='logo'>Imaginary Disney</h1>\n \n      <Reddit/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}